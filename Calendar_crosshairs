<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crosshair Calendar</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

```
    .calendar-container {
        background: white;
        border: 2px solid #333;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        position: relative;
    }

    .calendar-header {
        text-align: center;
        margin-bottom: 20px;
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    .calendar {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 1px;
        position: relative;
        background: #ddd;
        border: 1px solid #ddd;
    }

    .day-header {
        background: white;
        padding: 10px 5px;
        text-align: center;
        font-weight: bold;
        font-size: 14px;
        color: #333;
    }

    .day {
        background: white;
        padding: 12px 5px;
        text-align: center;
        font-size: 16px;
        position: relative;
        min-height: 20px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .day:hover {
        background-color: #f5f5f5;
    }

    .day.current-month {
        color: #2166ff;
        font-weight: 500;
    }

    .day.other-month {
        color: #999;
    }

    .day.today {
        background-color: #fff3cd;
        font-weight: bold;
    }

    /* Crosshair lines - parallel lines that don't overlap numbers */
    .crosshair-vertical-left {
        position: absolute;
        width: 2px;
        background: #dc3545;
        top: 0;
        bottom: 0;
        z-index: 10;
        pointer-events: none;
    }

    .crosshair-vertical-right {
        position: absolute;
        width: 2px;
        background: #dc3545;
        top: 0;
        bottom: 0;
        z-index: 10;
        pointer-events: none;
    }

    .crosshair-horizontal-top {
        position: absolute;
        height: 2px;
        background: #dc3545;
        left: 0;
        right: 0;
        z-index: 10;
        pointer-events: none;
    }

    .crosshair-horizontal-bottom {
        position: absolute;
        height: 2px;
        background: #dc3545;
        left: 0;
        right: 0;
        z-index: 10;
        pointer-events: none;
    }

    .controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .nav-button {
        background: #2166ff;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

    .nav-button:hover {
        background: #1952cc;
    }

    .current-date {
        text-align: center;
        margin-top: 15px;
        font-size: 16px;
        color: #666;
    }
</style>
```

</head>
<body>
    <div class="calendar-container">
        <div class="controls">
            <button class="nav-button" onclick="changeMonth(-1)">← Previous</button>
            <div class="calendar-header" id="monthYear"></div>
            <button class="nav-button" onclick="changeMonth(1)">Next →</button>
        </div>

```
    <div class="calendar" id="calendar">
        <!-- Calendar will be generated here -->
    </div>
    
    <div class="current-date" id="currentDate"></div>
</div>

<script>
    let currentDate = new Date();
    let displayMonth = currentDate.getMonth();
    let displayYear = currentDate.getFullYear();

    const monthNames = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];

    const dayNames = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];

    function generateCalendar() {
        const calendar = document.getElementById('calendar');
        const monthYearHeader = document.getElementById('monthYear');
        
        // Clear previous calendar
        calendar.innerHTML = '';
        
        // Set header
        monthYearHeader.textContent = `${monthNames[displayMonth]} ${displayYear}`;
        
        // Add day headers
        dayNames.forEach(day => {
            const dayHeader = document.createElement('div');
            dayHeader.className = 'day-header';
            dayHeader.textContent = day;
            calendar.appendChild(dayHeader);
        });

        // Get first day of month and number of days
        const firstDay = new Date(displayYear, displayMonth, 1).getDay();
        const daysInMonth = new Date(displayYear, displayMonth + 1, 0).getDate();
        const daysInPrevMonth = new Date(displayYear, displayMonth, 0).getDate();
        
        // Add previous month's trailing days
        for (let i = firstDay - 1; i >= 0; i--) {
            const dayElement = document.createElement('div');
            dayElement.className = 'day other-month';
            dayElement.textContent = daysInPrevMonth - i;
            calendar.appendChild(dayElement);
        }
        
        // Add current month's days
        for (let day = 1; day <= daysInMonth; day++) {
            const dayElement = document.createElement('div');
            dayElement.className = 'day current-month';
            dayElement.textContent = day;
            
            // Check if this is today
            const today = new Date();
            if (displayYear === today.getFullYear() && 
                displayMonth === today.getMonth() && 
                day === today.getDate()) {
                dayElement.classList.add('today');
            }
            
            calendar.appendChild(dayElement);
        }
        
        // Add next month's leading days
        const totalCells = calendar.children.length - 7; // Subtract day headers
        const remainingCells = 42 - totalCells; // 6 rows × 7 days = 42 cells
        for (let day = 1; day <= remainingCells; day++) {
            const dayElement = document.createElement('div');
            dayElement.className = 'day other-month';
            dayElement.textContent = day;
            calendar.appendChild(dayElement);
        }
        
        // Add crosshairs for today (if current month is displayed)
        addCrosshairs();
    }

    function addCrosshairs() {
        // Remove existing crosshairs
        const existingCrosshairs = calendar.querySelectorAll('.crosshair-vertical-left, .crosshair-vertical-right, .crosshair-horizontal-top, .crosshair-horizontal-bottom');
        existingCrosshairs.forEach(crosshair => crosshair.remove());
        
        const today = new Date();
        
        // Only show crosshairs if we're displaying the current month/year
        if (displayYear !== today.getFullYear() || displayMonth !== today.getMonth()) {
            return;
        }
        
        const todayDate = today.getDate();
        const firstDay = new Date(displayYear, displayMonth, 1).getDay();
        const todayPosition = firstDay + todayDate - 1; // Position in grid (0-based)
        
        // Calculate row and column (0-based)
        const row = Math.floor(todayPosition / 7) + 1; // +1 for header row
        const col = todayPosition % 7;
        
        const cellWidth = 100/7; // Each column is 1/7 of the width
        const cellHeight = 100/7; // Each row is 1/7 of the height (7 rows including header)
        
        // Create parallel vertical lines (left and right of the number)
        const verticalLeft = document.createElement('div');
        verticalLeft.className = 'crosshair-vertical-left';
        verticalLeft.style.left = `${(col * cellWidth) + (cellWidth * 0.25)}%`; // 25% into the cell
        calendar.appendChild(verticalLeft);
        
        const verticalRight = document.createElement('div');
        verticalRight.className = 'crosshair-vertical-right';
        verticalRight.style.left = `${(col * cellWidth) + (cellWidth * 0.75)}%`; // 75% into the cell
        calendar.appendChild(verticalRight);
        
        // Create parallel horizontal lines (top and bottom of the number)
        const horizontalTop = document.createElement('div');
        horizontalTop.className = 'crosshair-horizontal-top';
        horizontalTop.style.top = `${(row * cellHeight) + (cellHeight * 0.25)}%`; // 25% into the cell
        calendar.appendChild(horizontalTop);
        
        const horizontalBottom = document.createElement('div');
        horizontalBottom.className = 'crosshair-horizontal-bottom';
        horizontalBottom.style.top = `${(row * cellHeight) + (cellHeight * 0.75)}%`; // 75% into the cell
        calendar.appendChild(horizontalBottom);
    }

    function changeMonth(direction) {
        displayMonth += direction;
        if (displayMonth > 11) {
            displayMonth = 0;
            displayYear++;
        } else if (displayMonth < 0) {
            displayMonth = 11;
            displayYear--;
        }
        generateCalendar();
    }

    function updateCurrentDate() {
        const today = new Date();
        const options = { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        };
        document.getElementById('currentDate').textContent = 
            `Today: ${today.toLocaleDateString('en-US', options)}`;
    }

    // Initialize calendar
    generateCalendar();
    updateCurrentDate();
    
    // Update calendar every minute to catch date changes
    setInterval(() => {
        const newDate = new Date();
        if (newDate.getDate() !== currentDate.getDate()) {
            currentDate = newDate;
            generateCalendar();
            updateCurrentDate();
        }
    }, 60000);
</script>
```

</body>
</html>
